// Generated by view binder compiler. Do not edit!
package devandroid.fabricio.projeto_mapaifam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import devandroid.fabricio.projeto_mapaifam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btEntrar;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView msgBemVindos;

  @NonNull
  public final TextView msgTopo;

  @NonNull
  public final TextView textView2;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btEntrar,
      @NonNull ConstraintLayout main, @NonNull TextView msgBemVindos, @NonNull TextView msgTopo,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.btEntrar = btEntrar;
    this.main = main;
    this.msgBemVindos = msgBemVindos;
    this.msgTopo = msgTopo;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btEntrar;
      Button btEntrar = ViewBindings.findChildViewById(rootView, id);
      if (btEntrar == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.msg_bemVindos;
      TextView msgBemVindos = ViewBindings.findChildViewById(rootView, id);
      if (msgBemVindos == null) {
        break missingId;
      }

      id = R.id.msgTopo;
      TextView msgTopo = ViewBindings.findChildViewById(rootView, id);
      if (msgTopo == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btEntrar, main, msgBemVindos,
          msgTopo, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
